{"version":3,"sources":["images/fb.png","images/background.jpg","components/Header.jsx","components/Footer.jsx","features/cart.js","components/Product.jsx","components/ShoppingCart.jsx","App.js","serviceWorker.js","features/rootReducer.js","index.js"],"names":["module","exports","Header","setShow","sendNav","cart","useSelector","state","count","forEach","cartItem","className","onClick","showproduct","src","alt","showShoppingCart","Footer","img","addToCart","createAction","removeFromCart","increaseAmount","decreaseAmount","actions","reducer","createReducer","action","find","product","name","payload","map","filter","Product","dispatch","useDispatch","useState","sort","setSort","data","price","im","item","handleClick","length","toUpperCase","match","toString","key","images","type","placeholder","value","onChange","event","target","ShoppingCart","useForm","handleSubmit","register","errors","sum","itemSummary","productsInCart","disabled","onSubmit","values","console","log","ref","required","pattern","firstname","lastname","adress","post","email","phone","cardnumber","cvc","App","show","Body","Boolean","window","location","hostname","rootReducer","combineReducers","cartReducer","store","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.52c10b31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fb.c3f83915.png\";","module.exports = __webpack_public_path__ + \"static/media/background.7de3f599.jpg\";","  \r\nimport React from 'react';\r\nimport './Header.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst Header=({setShow,sendNav})=>{\r\n    const cart = useSelector(state => state.cart);\r\n    let count = 0;\r\n    cart.forEach(cartItem => { count += cartItem.count; });\r\n\r\n    return(\r\n        <header>\r\n            <ul className=\"item\">\r\n                <li onClick={()=>setShow(sendNav.showproduct)}>\r\n                    Shop\r\n                </li>\r\n                <li>\r\n                    <img className=\"bobbyIcon\" src=\"img/bobbybuilder3.png\" alt=\"Bobby Builder\" />\r\n                </li>\r\n                <li onClick={()=>setShow(sendNav.showShoppingCart)}>\r\n                <img className=\"shopIcon\" src=\"img/Shopping-Cart-icon.png\" alt=\"cart\" />\r\n                <span>[{count}]</span>\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport './Footer.css';\r\nimport img from '../images/fb.png';\r\n\r\nconst Footer=()=>{\r\n\r\n\r\n\r\n\r\n    return(\r\n        \r\n            \r\n        <div className=\"footer\">\r\n                <div className=\"text\">\r\n                <p>Address</p> \r\n                <p>Pontusgatan 1</p>\r\n                <p>Göteborg 44812</p>\r\n                </div>\r\n                <div className=\"text\">\r\n                    <p>Kontakt</p>\r\n                    <p>email: bobbybuilder@gmail.com</p>\r\n                    <p>Telefon: 0708 12 34 56</p>\r\n                </div>\r\n                \r\n                <div className=\"text\">\r\n                    <p>Följ oss på sociala medier!</p>\r\n                    <img className=\"socialmediaimg\" src={img} alt=\"uh\"/>\r\n                </div>\r\n        \r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","import { createAction, createReducer } from '@reduxjs/toolkit';\r\n\r\nconst addToCart = createAction('add to cart');\r\nconst removeFromCart = createAction('remove from cart');\r\nconst increaseAmount = createAction('increase amount');\r\nconst decreaseAmount = createAction('decreaseAmount');\r\n\r\nconst actions = { addToCart, removeFromCart, increaseAmount, decreaseAmount };\r\n\r\nconst initialState = [\r\n    // {\r\n    //     product: { name: 'Super bobby v2', price: 500, im: \"img/bobby1.jpeg\" },\r\n    //     count: 1,\r\n    // },\r\n];\r\n\r\nconst reducer = createReducer(initialState, {\r\n    [addToCart]: (state, action) => {\r\n        let found = state.find(cartItem => cartItem.product.name === action.payload.name);\r\n        if (found) {\r\n            return state.map(cartItem => {\r\n                if (cartItem.product.name === action.payload.name) {\r\n                    return { ...cartItem, count: cartItem.count + 1 }\r\n                } else {\r\n                    return cartItem;\r\n                }\r\n            });\r\n        } else {\r\n            return [\r\n                ...state,\r\n                { product: action.payload, count: 1 }\r\n            ];\r\n        }\r\n    },\r\n\r\n    [increaseAmount]: (state, action) => (\r\n        state.map(cartItem => {\r\n            if (cartItem.product.name === action.payload) {\r\n                return { ...cartItem, count: cartItem.count + 1 }\r\n            } else {\r\n                return cartItem;\r\n            }\r\n        })\r\n    ),\r\n\r\n    [decreaseAmount]: (state, action) => (\r\n        state.map(cartItem => {\r\n            if (cartItem.product.name === action.payload) {\r\n                return { ...cartItem, count: cartItem.count - 1 }\r\n            } else {\r\n                return cartItem;\r\n            }\r\n        })\r\n    ),\r\n\r\n    [removeFromCart]: (state, action) => (\r\n        state.filter(cartItem => cartItem.product.name !== action.payload)\r\n    )\r\n\r\n\r\n});\r\n\r\n\r\nexport { actions, reducer };","/* eslint-disable */\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport './product.css';\r\nimport images from '../images/background.jpg';\r\nimport { useDispatch } from 'react-redux';\r\nimport { actions } from \"../features/cart\";\r\n\r\nconst Product = () => {\r\n    const dispatch = useDispatch();\r\n    const productList = [\r\n        {name:'Classic Racer', price:600,im:\"img/bobby1.jpeg\" },\r\n        {name:'Delux ', price:400,im:\"img/bobby2.jpg\"},\r\n        {name:'Ledljus', price:700,im:\"img/bobby3.jpg\"},\r\n        {name:'Fulda classic', price:200,im:\"img/bobby4.jpg\"},\r\n        {name:'Neo', price:800,im:\"img/bobby5.jpg\"},\r\n        {name:'porse', price:600,im:\"img/bobby6.jpg\"},\r\n        {name:'Bmw', price:400,im:\"img/bobby7.jpg\"},\r\n        {name:'Mercdeze', price:700,im:\"img/bobby8.jpg\"},   \r\n    ]\r\n\r\n     // Prints out the objects that are searched for.  \r\n    const [sort, setSort]=useState(\"\");\r\n    const data = productList.map((item)=> {\r\n   const handleClick = () => dispatch(actions.addToCart(item))\r\n        if(sort.length !== 0) {\r\n            if (item.name.toUpperCase().match(sort.toUpperCase())\r\n            ||(item.price.toString().match(sort.toString()))\r\n            \r\n            ) {\r\n            return <div  key={item.name}> \r\n                        <div  className=\"grid-item\" >\r\n                        <a> Model: {item.name}</a>\r\n                        <p> Price: {item.price} </p>\r\n                        <img src={item.im} alt=\"bobby2\" />\r\n                        <button className=\"but\" onClick={handleClick}>Add to Shopping</button>  \r\n                    </div>\r\n                </div>\r\n            }\r\n            else {\r\n                return null\r\n            }\r\n        }\r\n     //end of search print   \r\n\r\n     //prints out all the available objects\r\n    return <div  key={item.name}> \r\n                <div  className=\"grid-item\" >\r\n                    <a> Model: {item.name}</a>\r\n                    <p> Price: {item.price} </p>\r\n                    <img src={item.im} alt=\"bobby2\" />\r\n                    <button className=\"but\" onClick={handleClick}>Add to Shopping</button>  \r\n                </div>\r\n            </div>\r\n        })\r\n    return (\r\n\r\n        <div className=\"wrapper\">\r\n            <div className=\"bigPictureWrapper\">\r\n                <img className=\"backgroundimg\"   src={images} alt=\"background\"/>\r\n                <div className=\"bottom-right\">\r\n                    <h1>Köp din bobby car online</h1>\r\n                    <p>Fri frakt på allt</p>\r\n                    <p>Livstid service</p>\r\n                    <p>Snabbast och säkrast</p>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n            <div className=\"itemSearchContainer\">\r\n\r\n            <form>\r\n                <div className=\"row\">\r\n                    <div  className=\"col-25\">\r\n                        <label ></label>\r\n                    </div>\r\n                    <div className=\"col-75\">\r\n                    <input className=\"SearchProduct\" type=\"text\" placeholder=\"search...\" value={sort} onChange={(event) => setSort(event.target.value)} />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n                {/* <form className=\"search\">\r\n                    <label className=\"searchFornt\">köp din bil här</label>\r\n                    <input className=\"SearchProduct\" type=\"text\" placeholder=\"search...\" value={sort} onChange={(event) => setSort(event.target.value)} />\r\n                </form> */}\r\n                <div className=\"products\">\r\n                {data}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport \"./Cart.css\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { actions } from '../features/cart';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst ShoppingCart = () => {\r\n    const dispatch = useDispatch();\r\n    const data = useSelector(state => state.cart);\r\n    const { handleSubmit, register, errors } = useForm();\r\n    const onSubmit = values => console.log(values);\r\n    let sum = 0;\r\n    data.forEach(cartItem => { sum += cartItem.product.price * cartItem.count });\r\n\r\n    let itemSummary = data.map(item => {\r\n        return (\r\n            <div key={item.product.name} className=\"item-summary\">\r\n                <div>\r\n                    <h4>{item.product.name}</h4>\r\n                    <p>Antal: {item.count}</p>\r\n                </div>\r\n                <div>\r\n                    <p>{item.product.price}Kr</p>\r\n                    <p>{item.count * item.product.price}Kr</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    let productsInCart = data.map(item => {\r\n        return (\r\n            <div key={item.product.name}>\r\n                <div className=\"cart product-container\">\r\n                    <div className=\"cart-header\">\r\n                        <h4 className=\"cart-product-model\">{item.product.name}</h4>\r\n                        <button className=\"delete-button\" onClick={() => dispatch(actions.removeFromCart(item.product.name))}>X</button>\r\n                    </div>\r\n                    <div className=\"product-info\">\r\n                        <div className=\"cart-price-count\">\r\n                            <p className=\"cart-product-price\">Pris: {item.product.price}kr</p>\r\n                            <p className=\"cart-product-count\">Antal: {item.count}</p>\r\n                        </div>\r\n                        <div className=\"count-buttons\" >\r\n                            <button className=\"count-button-up\" onClick={() => dispatch(actions.increaseAmount(item.product.name))} ><i className=\"arrow up\"></i></button>\r\n                            <button className=\"count-button-down\" onClick={() => dispatch(actions.decreaseAmount(item.product.name))}\r\n                                disabled={item.count === 0} ><i className=\"arrow down\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                    <img className=\"cart-img\" src={item.product.im} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"cart\">\r\n                    <h1>Kassa</h1>\r\n                    {productsInCart}\r\n                    <h2>Summering</h2>\r\n                    {itemSummary}\r\n                    <p className=\"sum\">Totalt: {sum}Kr</p>\r\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"input-fields\">\r\n\r\n                        <p className=\"input-header\">Förnamn</p>\r\n                        <div>\r\n                        <input name=\"firstname\" type=\"text\" ref={register({ required: true,  pattern: /^[A-Za-z]+$/i })} />\r\n                        {errors.firstname && <span>Du måste fylla i ditt förnamn</span>}\r\n                        </div>\r\n\r\n\r\n\r\n                        <p className=\"input-header\">Efternamn</p>\r\n                        <div>\r\n                        <input name=\"lastname\" type=\"text\" ref={register({ required: true, pattern: /^[A-Za-z]+$/i })} />\r\n                        {errors.lastname && <span>Du måste fylla i ditt efternamn</span>}\r\n                        </div>\r\n\r\n\r\n                        <p className=\"input-header\">Adress</p>\r\n                        <div>\r\n                            <input name=\"adress\" type=\"text\" ref={register({ required: true })} />\r\n                            {errors.adress && <span>Du måste fylla i din adress</span>}\r\n                        </div>\r\n\r\n                        <p className=\"input-header\">Postnummer</p>\r\n                        <div>\r\n                            <input name=\"post\" type=\"text\" ref={register({ required: true, pattern: /^[0-9]{3}\\s*[0-9]{2}^/  })} />\r\n                            {errors.post && <span>5 siffror</span>}\r\n                        </div>\r\n\r\n                        <p className=\"input-header\">Email</p>\r\n                        <div>\r\n                            \r\n                            <input name=\"email\" type=\"text\" ref={register({ required: true, pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i })} />\r\n                            {errors.email && <span>Du måste fylla i din email adress</span>}\r\n                                \r\n                        </div>\r\n                        \r\n                        <p className=\"input-header\">Telefon</p>\r\n                        <div>\r\n                            <input name=\"phone\" type=\"text\" ref={register({ required: true, pattern: /\\+?[-0-9 ]*/ })} />\r\n                            {errors.phone && <span>Du måste fylla i ditt telefonnummer</span>}\r\n                        </div>\r\n                        \r\n                        \r\n                        <p className=\"input-header\">Kortnummer </p>\r\n                        <div>\r\n                            <input name=\"cardnumber\" type=\"text\" ref={register({ required: true, pattern: /^[0-9]{4}\\s?[0-9]{4}\\s?[0-9]{4}\\s?[0-9]{4}$/ })} />\r\n                            {errors.cardnumber && <span>16 siffror</span>}\r\n                        </div>\r\n                        <p className=\"input-header cvc-header\">Cvc </p>   \r\n                            <div>\r\n                                <input name=\"cvc\" className=\"cvc\" type=\"text\" ref={register({ required: true, pattern: /^[0-9]{3}$/ })} /> \r\n                                    {errors.cvc && <span>3 siffror</span>}\r\n                            </div>\r\n                        \r\n                        \r\n                        <button type=\"submit\" className=\"cta-button\">Köp nu</button>\r\n                        {/* onClick={alert(\"Hello! I am an alert box!!\")} */}\r\n                        \r\n                    </form>\r\n                    {/* <input type=\"submit\"/> */}\r\n                   \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ShoppingCart;","import React , {useState} from 'react'\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Product from './components/Product';\r\nimport ShoppingCart from './components/ShoppingCart';\r\n\r\nfunction App() {\r\n  const showproduct = 'product', showShoppingCart = 'Cart';\r\n  const [show, setShow] = useState(showproduct);\r\n  let Body= 0;\r\n  if(show===showproduct){\r\n     Body=<Product/>\r\n  }else{\r\n    Body=<ShoppingCart/>\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n        <Header setShow={setShow} sendNav={{showproduct,showShoppingCart}}/>\r\n          <main>\r\n            {Body}\r\n          </main>\r\n        <Footer/>\r\n    </div>\r\n  );\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as cartReducer } from './cart';\r\n\r\nconst rootReducer = combineReducers({\r\n    cart: cartReducer\r\n})\r\n\r\nexport { rootReducer };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { rootReducer } from './features/rootReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n})\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}><App /></Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}